{"openapi":"3.0.0","info":{"title":"API BLOGS","version":"","description":"API Blogs for learning Front End","termsOfService":"","license":null,"contact":[],"x-logo":{"url":"https:\/\/images.unsplash.com\/photo-1417325384643-aac51acc9e5d?q=75&fm=jpg","altText":"API BLOGS","backgroundColor":""}},"components":{"securitySchemes":{"BearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}},"schemas":[]},"servers":[{"url":"http:\/\/localhost","description":"Documentation generator server."},{"url":"http:\/\/test.example.com","description":"Test server."}],"paths":{"\/api\/blogs":{"get":{"tags":["Blog Management"],"operationId":"Display a listing of blogs.","description":"","parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X GET -G \"http:\/\/localhost\/api\/blogs\" \n"},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/blogs\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nfetch(url, {\n    method: \"GET\",\n    headers: headers,\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/blogs\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]},"post":{"tags":["Blog Management"],"operationId":"Store a newly created blog in storage.","description":"","requestBody":{"description":"","required":true,"content":{"application\/json":{"schema":{"type":"object","required":["title","slug","content","category_id","author_id"],"properties":{"title":{"type":"string","example":"My First Blog","description":"The title of the blog."},"slug":{"type":"string","example":"my-first-blog","description":"The unique slug of the blog."},"content":{"type":"string","example":"This is the content.","description":"The content of the blog."},"category_id":{"type":"integer","example":1,"description":"The ID of the category."},"author_id":{"type":"integer","example":1,"description":"The ID of the author."},"tags":{"type":"array","example":"[1, 2]","description":"Optional array of tag IDs."}},"example":{"title":"My First Blog","slug":"my-first-blog","content":"This is the content.","category_id":1,"author_id":1,"tags":"[1, 2]"}}}}},"parameters":[],"responses":{"201":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X POST \"http:\/\/localhost\/api\/blogs\" \n    -d \"title\"=\"My First Blog\" \\\n    -d \"slug\"=\"my-first-blog\" \\\n    -d \"content\"=\"This is the content.\" \\\n    -d \"category_id\"=\"1\" \\\n    -d \"author_id\"=\"1\" \\\n    -d \"tags\"=\"[1, 2]\" "},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/blogs\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nlet body = JSON.stringify({\n    \"title\": \"My First Blog\",\n    \"slug\": \"my-first-blog\",\n    \"content\": \"This is the content.\",\n    \"category_id\": \"1\",\n    \"author_id\": \"1\",\n    \"tags\": \"[1, 2]\",\n})\n\nfetch(url, {\n    method: \"POST\",\n    headers: headers,\n    body: body\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n$body = [\n    \"title\" =>  \"My First Blog\",\n    \"slug\" =>  \"my-first-blog\",\n    \"content\" =>  \"This is the content.\",\n    \"category_id\" =>  \"1\",\n    \"author_id\" =>  \"1\",\n    \"tags\" => \"json_decode([1, 2], true)\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/blogs\");\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_setopt($ch, CURLOPT_POSTFIELDS, $body);\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]}},"\/api\/blogs\/{blog}":{"get":{"tags":["Blog Management"],"operationId":"Display the specified blog.","description":"","parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"404":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X GET -G \"http:\/\/localhost\/api\/blogs\/{blog}\" \n"},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/blogs\/{blog}\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nfetch(url, {\n    method: \"GET\",\n    headers: headers,\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/blogs\/{blog}\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]},"put":{"tags":["Blog Management"],"operationId":"Update the specified blog in storage.","description":"","requestBody":{"description":"","required":true,"content":{"application\/json":{"schema":{"type":"object","properties":{"title":{"type":"string","example":"My Updated Blog","description":"The title of the blog."},"slug":{"type":"string","example":"my-updated-blog","description":"The unique slug of the blog."},"content":{"type":"string","example":"Updated content.","description":"The content of the blog."},"category_id":{"type":"integer","example":2,"description":"The ID of the category."},"author_id":{"type":"integer","example":1,"description":"The ID of the author."},"tags":{"type":"array","example":"[1, 2]","description":"Optional array of tag IDs."}},"example":{"title":"My Updated Blog","slug":"my-updated-blog","content":"Updated content.","category_id":2,"author_id":1,"tags":"[1, 2]"}}}}},"parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X PUT \"http:\/\/localhost\/api\/blogs\/{blog}\" \n    -d \"title\"=\"My Updated Blog\" \\\n    -d \"slug\"=\"my-updated-blog\" \\\n    -d \"content\"=\"Updated content.\" \\\n    -d \"category_id\"=\"2\" \\\n    -d \"author_id\"=\"1\" \\\n    -d \"tags\"=\"[1, 2]\" "},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/blogs\/{blog}\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nlet body = JSON.stringify({\n    \"title\": \"My Updated Blog\",\n    \"slug\": \"my-updated-blog\",\n    \"content\": \"Updated content.\",\n    \"category_id\": \"2\",\n    \"author_id\": \"1\",\n    \"tags\": \"[1, 2]\",\n})\n\nfetch(url, {\n    method: \"PUT\",\n    headers: headers,\n    body: body\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n$body = [\n    \"title\" =>  \"My Updated Blog\",\n    \"slug\" =>  \"my-updated-blog\",\n    \"content\" =>  \"Updated content.\",\n    \"category_id\" =>  \"2\",\n    \"author_id\" =>  \"1\",\n    \"tags\" => \"json_decode([1, 2], true)\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/blogs\/{blog}\");\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"PUT\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]},"delete":{"tags":["Blog Management"],"operationId":"Remove the specified blog from storage.","description":"","parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"404":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X DELETE \"http:\/\/localhost\/api\/blogs\/{blog}\" \n"},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/blogs\/{blog}\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nfetch(url, {\n    method: \"DELETE\",\n    headers: headers,\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/blogs\/{blog}\");\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]}},"\/api\/categories":{"get":{"tags":["Category Management"],"operationId":"Display a listing of categories.","description":"","parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X GET -G \"http:\/\/localhost\/api\/categories\" \n"},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/categories\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nfetch(url, {\n    method: \"GET\",\n    headers: headers,\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/categories\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]},"post":{"tags":["Category Management"],"operationId":"Store a newly created category in storage.","description":"","requestBody":{"description":"","required":true,"content":{"application\/json":{"schema":{"type":"object","required":["name"],"properties":{"name":{"type":"string","example":"Programming","description":"The name of the category."}},"example":{"name":"Programming"}}}}},"parameters":[],"responses":{"201":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"422":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X POST \"http:\/\/localhost\/api\/categories\" \n    -d \"name\"=\"Programming\" "},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/categories\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nlet body = JSON.stringify({\n    \"name\": \"Programming\",\n})\n\nfetch(url, {\n    method: \"POST\",\n    headers: headers,\n    body: body\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n$body = [\n    \"name\" =>  \"Programming\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/categories\");\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_setopt($ch, CURLOPT_POSTFIELDS, $body);\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]}},"\/api\/categories\/{category}":{"get":{"tags":["Category Management"],"operationId":"Display the specified category.","description":"","parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"404":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X GET -G \"http:\/\/localhost\/api\/categories\/{category}\" \n"},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/categories\/{category}\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nfetch(url, {\n    method: \"GET\",\n    headers: headers,\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/categories\/{category}\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]},"put":{"tags":["Category Management"],"operationId":"Update the specified category in storage.","description":"","requestBody":{"description":"","required":true,"content":{"application\/json":{"schema":{"type":"object","required":["name"],"properties":{"name":{"type":"string","example":"Programming Updated","description":"The name of the category."}},"example":{"name":"Programming Updated"}}}}},"parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"404":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X PUT \"http:\/\/localhost\/api\/categories\/{category}\" \n    -d \"name\"=\"Programming Updated\" "},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/categories\/{category}\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nlet body = JSON.stringify({\n    \"name\": \"Programming Updated\",\n})\n\nfetch(url, {\n    method: \"PUT\",\n    headers: headers,\n    body: body\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n$body = [\n    \"name\" =>  \"Programming Updated\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/categories\/{category}\");\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"PUT\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]},"delete":{"tags":["Category Management"],"operationId":"Remove the specified category from storage.","description":"","parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"404":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X DELETE \"http:\/\/localhost\/api\/categories\/{category}\" \n"},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/categories\/{category}\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nfetch(url, {\n    method: \"DELETE\",\n    headers: headers,\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/categories\/{category}\");\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]}},"\/api\/tags":{"get":{"tags":["Tag Management"],"operationId":"Display a listing of tags.","description":"","parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X GET -G \"http:\/\/localhost\/api\/tags\" \n"},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/tags\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nfetch(url, {\n    method: \"GET\",\n    headers: headers,\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/tags\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]},"post":{"tags":["Tag Management"],"operationId":"Store a newly created tag in storage.","description":"","requestBody":{"description":"","required":true,"content":{"application\/json":{"schema":{"type":"object","required":["name"],"properties":{"name":{"type":"string","example":"Technology","description":"The name of the tag."}},"example":{"name":"Technology"}}}}},"parameters":[],"responses":{"201":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"422":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X POST \"http:\/\/localhost\/api\/tags\" \n    -d \"name\"=\"Technology\" "},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/tags\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nlet body = JSON.stringify({\n    \"name\": \"Technology\",\n})\n\nfetch(url, {\n    method: \"POST\",\n    headers: headers,\n    body: body\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n$body = [\n    \"name\" =>  \"Technology\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/tags\");\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_setopt($ch, CURLOPT_POSTFIELDS, $body);\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]}},"\/api\/tags\/{tag}":{"get":{"tags":["Tag Management"],"operationId":"Display the specified tag.","description":"","parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"404":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X GET -G \"http:\/\/localhost\/api\/tags\/{tag}\" \n"},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/tags\/{tag}\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nfetch(url, {\n    method: \"GET\",\n    headers: headers,\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/tags\/{tag}\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]},"put":{"tags":["Tag Management"],"operationId":"Update the specified tag in storage.","description":"","requestBody":{"description":"","required":true,"content":{"application\/json":{"schema":{"type":"object","required":["name"],"properties":{"name":{"type":"string","example":"Science","description":"The new name of the tag."}},"example":{"name":"Science"}}}}},"parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"404":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"422":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X PUT \"http:\/\/localhost\/api\/tags\/{tag}\" \n    -d \"name\"=\"Science\" "},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/tags\/{tag}\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nlet body = JSON.stringify({\n    \"name\": \"Science\",\n})\n\nfetch(url, {\n    method: \"PUT\",\n    headers: headers,\n    body: body\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n$body = [\n    \"name\" =>  \"Science\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/tags\/{tag}\");\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"PUT\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]},"delete":{"tags":["Tag Management"],"operationId":"Remove the specified tag from storage.","description":"","parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"404":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X DELETE \"http:\/\/localhost\/api\/tags\/{tag}\" \n"},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/tags\/{tag}\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nfetch(url, {\n    method: \"DELETE\",\n    headers: headers,\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/tags\/{tag}\");\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]}},"\/api\/comments":{"get":{"tags":["Comment Management"],"operationId":"Display a listing of comments.","description":"","parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X GET -G \"http:\/\/localhost\/api\/comments\" \n"},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/comments\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nfetch(url, {\n    method: \"GET\",\n    headers: headers,\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/comments\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]},"post":{"tags":["Comment Management"],"operationId":"Store a newly created comment in storage.","description":"","requestBody":{"description":"","required":true,"content":{"application\/json":{"schema":{"type":"object","required":["content","author_id","blog_id"],"properties":{"content":{"type":"string","example":"This is a comment.","description":"The content of the comment."},"author_id":{"type":"integer","example":1,"description":"The ID of the author."},"blog_id":{"type":"integer","example":1,"description":"The ID of the blog."}},"example":{"content":"This is a comment.","author_id":1,"blog_id":1}}}}},"parameters":[],"responses":{"201":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"422":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X POST \"http:\/\/localhost\/api\/comments\" \n    -d \"content\"=\"This is a comment.\" \\\n    -d \"author_id\"=\"1\" \\\n    -d \"blog_id\"=\"1\" "},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/comments\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nlet body = JSON.stringify({\n    \"content\": \"This is a comment.\",\n    \"author_id\": \"1\",\n    \"blog_id\": \"1\",\n})\n\nfetch(url, {\n    method: \"POST\",\n    headers: headers,\n    body: body\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n$body = [\n    \"content\" =>  \"This is a comment.\",\n    \"author_id\" =>  \"1\",\n    \"blog_id\" =>  \"1\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/comments\");\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_setopt($ch, CURLOPT_POSTFIELDS, $body);\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]}},"\/api\/comments\/{comment}":{"get":{"tags":["Comment Management"],"operationId":"Display the specified comment.","description":"","parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"404":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X GET -G \"http:\/\/localhost\/api\/comments\/{comment}\" \n"},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/comments\/{comment}\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nfetch(url, {\n    method: \"GET\",\n    headers: headers,\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/comments\/{comment}\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]},"put":{"tags":["Comment Management"],"operationId":"Update the specified comment in storage.","description":"","requestBody":{"description":"","required":true,"content":{"application\/json":{"schema":{"type":"object","required":["content"],"properties":{"content":{"type":"string","example":"Updated comment content.","description":"The updated content of the comment."}},"example":{"content":"Updated comment content."}}}}},"parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"404":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X PUT \"http:\/\/localhost\/api\/comments\/{comment}\" \n    -d \"content\"=\"Updated comment content.\" "},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/comments\/{comment}\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nlet body = JSON.stringify({\n    \"content\": \"Updated comment content.\",\n})\n\nfetch(url, {\n    method: \"PUT\",\n    headers: headers,\n    body: body\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n$body = [\n    \"content\" =>  \"Updated comment content.\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/comments\/{comment}\");\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"PUT\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]},"delete":{"tags":["Comment Management"],"operationId":"Remove the specified comment from storage.","description":"","parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"404":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X DELETE \"http:\/\/localhost\/api\/comments\/{comment}\" \n"},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/comments\/{comment}\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nfetch(url, {\n    method: \"DELETE\",\n    headers: headers,\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/comments\/{comment}\");\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]}},"\/api\/likes":{"get":{"tags":["Like Management"],"operationId":"Display a listing of likes.","description":"","parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X GET -G \"http:\/\/localhost\/api\/likes\" \n"},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/likes\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nfetch(url, {\n    method: \"GET\",\n    headers: headers,\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/likes\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]},"post":{"tags":["Like Management"],"operationId":"Store a newly created like in storage.","description":"","requestBody":{"description":"","required":true,"content":{"application\/json":{"schema":{"type":"object","required":["user_id","blog_id"],"properties":{"user_id":{"type":"integer","example":1,"description":"The ID of the user who likes the blog."},"blog_id":{"type":"integer","example":1,"description":"The ID of the blog being liked."}},"example":{"user_id":1,"blog_id":1}}}}},"parameters":[],"responses":{"201":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"422":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X POST \"http:\/\/localhost\/api\/likes\" \n    -d \"user_id\"=\"1\" \\\n    -d \"blog_id\"=\"1\" "},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/likes\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nlet body = JSON.stringify({\n    \"user_id\": \"1\",\n    \"blog_id\": \"1\",\n})\n\nfetch(url, {\n    method: \"POST\",\n    headers: headers,\n    body: body\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n$body = [\n    \"user_id\" =>  \"1\",\n    \"blog_id\" =>  \"1\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/likes\");\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_setopt($ch, CURLOPT_POSTFIELDS, $body);\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]}},"\/api\/likes\/{like}":{"get":{"tags":["Like Management"],"operationId":"Display the specified like.","description":"","parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"404":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X GET -G \"http:\/\/localhost\/api\/likes\/{like}\" \n"},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/likes\/{like}\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nfetch(url, {\n    method: \"GET\",\n    headers: headers,\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/likes\/{like}\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]},"delete":{"tags":["Like Management"],"operationId":"Remove the specified like from storage.","description":"","parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"404":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X DELETE \"http:\/\/localhost\/api\/likes\/{like}\" \n"},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/likes\/{like}\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nfetch(url, {\n    method: \"DELETE\",\n    headers: headers,\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/likes\/{like}\");\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]}},"\/api\/media":{"get":{"tags":["Media Management"],"operationId":"Display a listing of media.","description":"","parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X GET -G \"http:\/\/localhost\/api\/media\" \n"},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/media\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nfetch(url, {\n    method: \"GET\",\n    headers: headers,\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/media\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]},"post":{"tags":["Media Management"],"operationId":"Store a newly created media in storage.","description":"","requestBody":{"description":"","required":true,"content":{"application\/json":{"schema":{"type":"object","required":["url","type"],"properties":{"url":{"type":"string","example":"https:\/\/example.com\/media\/image1.jpg","description":"The URL of the media."},"type":{"type":"string","example":"image","description":"The type of the media (e.g., image, video, document)."}},"example":{"url":"https:\/\/example.com\/media\/image1.jpg","type":"image"}}}}},"parameters":[],"responses":{"201":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"422":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X POST \"http:\/\/localhost\/api\/media\" \n    -d \"url\"=\"https:\/\/example.com\/media\/image1.jpg\" \\\n    -d \"type\"=\"image\" "},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/media\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nlet body = JSON.stringify({\n    \"url\": \"https:\/\/example.com\/media\/image1.jpg\",\n    \"type\": \"image\",\n})\n\nfetch(url, {\n    method: \"POST\",\n    headers: headers,\n    body: body\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n$body = [\n    \"url\" =>  \"https:\/\/example.com\/media\/image1.jpg\",\n    \"type\" =>  \"image\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/media\");\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_setopt($ch, CURLOPT_POSTFIELDS, $body);\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]}},"\/api\/media\/{medium}":{"get":{"tags":["Media Management"],"operationId":"Display the specified media.","description":"","parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"404":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X GET -G \"http:\/\/localhost\/api\/media\/{medium}\" \n"},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/media\/{medium}\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nfetch(url, {\n    method: \"GET\",\n    headers: headers,\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/media\/{medium}\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]},"delete":{"tags":["Media Management"],"operationId":"Remove the specified media from storage.","description":"","parameters":[],"responses":{"200":{"description":"success","content":{"application\/json":{"schema":{"type":"object","example":{}}}}},"404":{"description":"error","content":{"application\/json":{"schema":{"type":"object","example":{}}}}}},"x-code-samples":[{"lang":"Bash","source":"curl -X DELETE \"http:\/\/localhost\/api\/media\/{medium}\" \n"},{"lang":"Javascript","source":"const url = new URL(\"http:\/\/localhost\/api\/media\/{medium}\");\n\nlet headers = {\n    \"Accept\": \"application\/json\",\n    \"Content-Type\": \"application\/json\",\n}\n\nfetch(url, {\n    method: \"DELETE\",\n    headers: headers,\n})\n    .then(response => response.json())\n    .then(json => console.log(json));\n"},{"lang":"PHP","source":"$headers = [\n    \"Accept\" => \"application\/json\",\n    \"Content-Type\" => \"application\/json\",\n];\n\n\n$ch = curl_init(\"http:\/\/localhost\/api\/media\/{medium}\");\ncurl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\n$err = curl_error($ch);\ncurl_close($ch);\n\nif ($err) {\n  throw \\Exception($err);\n} else {\n  return $response;\n}\n"}]}}},"x-tagGroups":[]}